*{ /* basic browser default style */
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
.flexbox /* flex container */
{
    display: flex;
    flex-direction: row; 
    flex-wrap: wrap; /* wrap the row flex-direction */
}
.flex-item
{
    display: block;
    width: 100%;
    height: 450px;
}
.item-1
{
    background: #c9e0e2;
}
.item-2
{
    background: #e5e4db;
}
.item-3
{
    background: #9f9286;
}
.item-4
{
    background: #657970;
}
/* tablet */
@media screen and (min-width: 768px)
{
    .item-2,
    .item-3,
    .item-5,
    .item-6
    {
        width: 50%;
    }
}
/* desktop */
@media screen and (min-width: 1200px)
{
    .item-2,
    .item-3,
    .item-4
    {
        /* width: 33.333333%; */
        width: calc(100% / 3); 
    }
} 
.video-section 
{
    position: relative; 
    overflow: hidden;  
    padding: 16px; 
}

.video-section > * /* just direct child */
{
    position: relative; 
    z-index: 3;   
}

.video-section p 
{
    background: none;    
}
.video-section video
{
    position: absolute;
    /* top: 0;   */
    right: 0; 
    bottom: 0;
    /* left: 0;  */
    width: 150%;
    height: auto;
    z-index: 1;
}

.video-section::before
{
    content: '';
    position: absolute;
    display: block;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.33);
    z-index: 2;
}

.transition-transform button
{
    font-family: Arial, Helvetica, sans-serif;
    color:gray;
    width: 200px;
    height: 10;
    background: lavenderblush;
    padding: 8px 16px;
    border: 3px solid black;
    margin: 32px;
    cursor: pointer; /* cursor change for pointer with hand */
    transition: 
        1s linear border, 
        0.3s ease-in padding, 
        0.5s ease-in-out background-color,
        2s ease color,
        4s ease font-size;
}
.transition-transform button:hover,
.transition-transform button:focus,
.transition-transform button:active {
    color: lavenderblush;
    background: gray;
    border: 6px dotted indigo;
    padding: 12px 20px;
}
/* Transform / hover example */
.transition-transform div{
    transition: 1s ease transform;
    display: inline-block;
    padding: 8px 16px;
    background-color: green;
    cursor: pointer;


}
.transition-transform div + div /* find a div beside a div ... this is a directly followed by sibling selector */
{
    background-color: blue;
    pointer-events: none; /* disable hover/click/etc for the element */
    /*will affect your javascript and all mouse actions */
}
.transition-transform div:hover + div /* now we're combining our pseudo state for hover, and telling the following div how to behave */
{
    transform :
    translate( 100px, -50px) /*move based on x and y */
    rotate( 35deg ) /* rotation in degree */
    scale( 2 ); /* resize the element 2= 200% */
    pointer-events: none;
}
div
{
    text-align: center;
}
.transition-transform button:nth-child(2){
    color:blue;
    background-color: black;
}
.transition-transform button:nth-child(3){
    color:rgb(200, 255, 0);
    background-color: rgb(228, 199, 145);
}

/* keyframe testing */
#keyframe-test 
{
    width: 50px;
    height: 50px;
    
    background-color: firebrick;
    margin: 64px;
    border-radius: 20px;
    animation-name: my-animation; /* call animation */
    animation-duration: 50s;
    animation-iteration-count: infinite;
    animation-direction: normal;
    animation-timing-function: linear;
}
.AA
{
    width: 100px;
    height: 100px;
    border-radius: 70px;
}

@keyframes my-animation
{
    0% /* point of change animation  */
    {
        transform: scale(1); /* scale of change */
    }
    20%
    {
        transform: scale(2);

    }   
    50% 
    {
        transform: scale(3);
    }
    100%
    {
        transform: scale(1);

    }   
}

